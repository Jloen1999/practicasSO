#!/bin/bash

# Preguntar al usuario si acaba de realizar el análisis o si desea cargar el análisis de frecuencias desde un archivo
read -p "¿Acaba de realizar el análisis (s/n)? " -r answer
if ! [[ $answer =~ ^[Ss]$ ]]; then
    read -p "Introduce el nombre del archivo de frecuencias: " -r freq_file
fi

cat "$freq_file"

if [ ! -f "$freq_file" ]; then
    echo "El archivo de frecuencias no existe."
    exit 1
fi

# Leer los encabezados del archivo de frecuencias
IFS=',' read -r -a headers < "$freq_file"
mapfile -t words <<< "$(IFS=$'\n'; echo "${headers[@]:2}")"  # Omitir los dos primeros encabezados (ID y spam/ham)

# Cargar los datos de frecuencia en la matriz, omitiendo la primera línea
declare -A freq_matrix
i=0
while IFS=',' read -r -a line; do
    for j in "${!line[@]}"; do
        freq_matrix[$i,$j]=${line[$j]}
    done
    ((i++))
done < <(tail -n +2 "$freq_file")

# Obtener el número total de correos electrónicos
num_emails=$i
echo "Número total de correos electrónicos: $num_emails"

# Crear una matriz para almacenar el TF y el IDF
declare -A tf_matrix
declare -A idf_matrix

# Calcular TF y IDF
IFS=' ' read -r -a words <<< "${headers[@]:2}"  # Dividir los encabezados en palabras individuales
for ((j=2; j<${#headers[@]}; j++)); do
    # Calcular el número de correos electrónicos que contienen la palabra
    num_emails_with_word=0
    for ((i=0; i<num_emails; i++)); do
        if [ "${freq_matrix[$i,$j]}" -gt 0 ]; then
            ((num_emails_with_word++))
        fi
    done
    echo "Número de correos electrónicos($num_emails) que contienen ${words[$((j-2))]}: $num_emails_with_word"
    # Comprobar que el número de correos electrónicos con la palabra es mayor que 0
    if [ $num_emails_with_word -gt 0 ]; then
        idf=$(echo "scale=4; l($num_emails/($num_emails_with_word))/l(10)" | bc -l)
        echo "IDF para ${words[$((j-2))]}: $idf"
    else
        echo "La palabra ${words[$((j-2))]} no aparece en ningún correo electrónico."
        # Establecer el IDF en 0 si la palabra no aparece en ningún correo electrónico
        idf=0
    fi

    idf_matrix[$j]=$idf

    # Calcular el TF para cada correo electrónico
    for ((i=0; i<num_emails; i++)); do
        email_id=${freq_matrix[$i,0]}
        total_words=$(echo "${emails[$((email_id-1))]}" | cut -d'|' -f2 | wc -w) # Obtener el número total de palabras en el correo electrónico. Restar 1 al ID para obtener el índice correcto en la matriz de correos electrónicos (que comienza en 0)

        # Comprobar que el número total de palabras es mayor que 0
        if [ $total_words -eq 0 ]; then
          echo "El correo electrónico $email_id no contiene palabras."
          tf=0
        else
          tf=$(echo "scale=4; ${freq_matrix[$i,$j]} / $total_words" | bc -l)
          echo "TF para correo electrónico $email_id y palabra ${words[$((j-2))]}: $tf"
        fi

        tf_matrix[$i,$j]=$tf
    done

done

# Calcular la métrica TF-IDF y almacenarla en la matriz tfidf_matrix, y calcular la media de los valores de TF-IDF para cada correo electrónico
declare -A tfidf_matrix
declare -A tfidf_avg
for ((i=0; i<num_emails; i++)); do
    sum=0
    for ((j=2; j<${#headers[@]}; j++)); do
        tfidf_matrix[$i,$j]=$(echo "scale=4; ${tf_matrix[$i,$j]} * ${idf_matrix[$j]}" | bc -l)
        sum=$(echo "$sum + ${tfidf_matrix[$i,$j]}" | bc -l)
    done
    tfidf_avg[$i]=$(echo "scale=4; $sum / ${#words[@]}" | bc -l)
done

# Guardar los resultados en un archivo .tfidf, incluyendo la media de los valores de TF-IDF para cada correo electrónico
tfidf_file="${freq_file%.freq}.tfidf"
{
    echo -n "ID,spam/ham,"
    printf "%s," "${words[@]}"
    echo "Media TF-IDF"
} > "$tfidf_file"

for ((i=0; i<num_emails; i++)); do
    {
        echo -n "${freq_matrix[$i,0]},${freq_matrix[$i,1]},"
        for ((j=2; j<${#headers[@]}; j++)); do
            echo -n "${tfidf_matrix[$i,$j]}"
            if (( j < ${#headers[@]} )); then
                echo -n ","
            fi
        done
        echo "${tfidf_avg[$i]}"
    } >> "$tfidf_file"
done

echo "Análisis TF-IDF completado. Los resultados se han guardado en $tfidf_file."